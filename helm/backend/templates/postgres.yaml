{{- $appName := include "helm.appName" . -}}
{{- $releaseName := .Release.Name -}}
---
apiVersion: v1
kind: Service
metadata:
  name: {{$appName}}-{{$releaseName}}-postgres-service
  labels:
    app: {{$appName}}-{{$releaseName}}
    service: {{$appName}}-{{$releaseName}}-postgres
spec:
  selector:
    service: {{$appName}}-{{$releaseName}}-postgres
  type: ClusterIP
  ports:
    - port: 5432
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: {{$appName}}-{{$releaseName}}-postgres-pv
  labels:
    name: {{$appName}}-{{$releaseName}}-postgres-pv
spec:
  capacity:
    storage: 50Gi
  storageClassName: standard
  accessModes:
    - ReadWriteOnce
  gcePersistentDisk:
    pdName: {{$appName}}-{{$releaseName}}-pg-data-disk
    fsType: ext4
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{$appName}}-{{$releaseName}}-postgres-pvc
  labels:
    type: local
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 50Gi
  volumeName: {{$appName}}-{{$releaseName}}-postgres-pv
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{$appName}}-{{$releaseName}}-postgres
  labels:
    name: {{$appName}}-{{$releaseName}}-database
spec:
  replicas: 1
  template:
    metadata:
      labels:
        service: {{$appName}}-{{$releaseName}}-postgres
    spec:
      containers:
        - name: postgres
          image: postgres:10.5-alpine
          volumeMounts:
            - name: postgres-volume-mount
              mountPath: /var/lib/postgresql/data
              subPath: postgres
          env:
            - name: POSTGRES_USER
              value: nicolasgirardot
            - name: POSTGRES_DB
              value: tracks
      restartPolicy: Always
      volumes:
        - name: postgres-volume-mount
          persistentVolumeClaim:
            claimName: {{$appName}}-{{$releaseName}}-postgres-pvc
